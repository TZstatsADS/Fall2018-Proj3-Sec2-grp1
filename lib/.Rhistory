knitr::opts_chunk$set(echo = TRUE)
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("gbm")){
install.packages("gbm")
}
if(!require("xgboost")){
install.packages("xgboost")
}
library("EBImage")
library("gbm")
library("xgboost")
set.seed(2018)
setwd("/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1")
train_dir <- "/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1/data/train_set/"
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
#train_HR_dir
run.cv=TRUE
K <- 2
run.test=TRUE
run.feature.train=TRUE
run.feature.test=TRUE
model_values<-seq(3,5,2) #depth for GBM
xgboost_values<-seq(0.1,0.5,by=0.1) #eta for xgboost
svm_values<-seq(0.01,0.1, by=0.02)
model_labels = paste("GBM with depth =", model_values)
source("/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1/lib/feature_YU.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
source("/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1/lib/feature_Min.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature_Min(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
source("/Users/lingyizhao/Documents/GitHub/Music-Recommendation/Fall2018-Proj3-Sec2-grp1/lib/feature_Min.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature_Min(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
source("/Users/lingyizhao/Documents/GitHub/Music-Recommendation/Fall2018-Proj3-Sec2-grp1/lib/feature_Min.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature_Min(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
getwd()
if(!require("EBImage")){
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
}
if(!require("gbm")){
install.packages("gbm")
}
if(!require("xgboost")){
install.packages("xgboost")
}
library("EBImage")
library("gbm")
library("xgboost")
set.seed(2018)
setwd("/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1")
train_dir <- "/Users/lingyizhao/Documents/GitHub/Fall2018-Proj3-Sec2--group_1/data/train_set/"
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
#train_HR_dir
run.cv=TRUE
K <- 2
run.test=TRUE
run.feature.train=TRUE
run.feature.test=TRUE
model_values<-seq(3,5,2) #depth for GBM
xgboost_values<-seq(0.1,0.5,by=0.1) #eta for xgboost
svm_values<-seq(0.01,0.1, by=0.02)
model_labels = paste("GBM with depth =", model_values)
source("/Users/lingyizhao/Documents/GitHub/Music-Recommendation/Fall2018-Proj3-Sec2-grp1/lib/feature_Min.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature_Min(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
source("/Users/lingyizhao/Documents/GitHub/Music-Recommendation/Fall2018-Proj3-Sec2-grp1/lib/feature.R")
source("/Users/lingyizhao/Documents/GitHub/Music-Recommendation/Fall2018-Proj3-Sec2-grp1/lib/feature.R")
